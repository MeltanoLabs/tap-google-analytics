[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1.9,<2",
]

[tool.poetry]
name = "tap-google-analytics"
version = "0.0.6"
description = "`tap-google-analytics` is a Singer tap for GoogleAnalytics, built with the Meltano SDK for Singer Taps."
authors = [
  "Pat Nadolny",
]
keywords = [
  "ELT",
  "GoogleAnalytics",
]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = ">=3.9"
backports-datetime-fromisoformat = { version = "~=2.0.1", python = "<3.11" }
singer-sdk = "~=0.41.0"
google-analytics-data = "~=0.18.8"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.1"
coverage = ">=7.1"
mypy = ">=1.8"
ruff = ">=0.2.1"

[tool.poetry.scripts]
# CLI declaration
tap-google-analytics = 'tap_google_analytics.tap:TapGoogleAnalytics.cli'

[tool.ruff]
target-version = "py39"

line-length = 100
lint.select = [
  "A",    # flake8-builtins
  "ARG",  # flake8-unused-arguments
  "B",    # flake8-bugbear
  "BLE",  # flake8-blind-except
  "C4",   # flake8-comprehensions
  "C90",  # mccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle (errors)
  "ERA",  # eradicate
  "F",    # Pyflakes
  "FA",   # flake8-future-annotations
  "FBT",  # flake8-boolean-trap
  "FLY",  # flynt
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "INP",  # flake8-no-pep420
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # Pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific rules
  "S",    # flake8-bandit
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "T20",  # flake8-print
  "TCH",  # flake8-type-checking
  "TID",  # flake8-tidy-imports
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle (warnings)
  "YTT",  # flake8-2020
]
lint.ignore = [
  "COM812",
  "ISC001",
]
lint.per-file-ignores."tests/*" = [
  "S101",
]
lint.unfixable = [
  "ERA",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"
